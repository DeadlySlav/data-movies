\documentclass[11pt]{article}
\usepackage{fullpage}
\usepackage{graphicx}
\usepackage[pdftex,bookmarks,pagebackref,colorlinks,pdfpagemode=UseOutlines, pdfauthor={Hadley Wickham}, pdftitle={Introduction to the movies dataset}]{hyperref} 
\title{Movies dataset}
\author{Hadley Wickham}
\date{\today}

\begin{document}

\maketitle

<% 
	library(lattice) 
	m <- read.csv("movies.csv", colClasses = c("character", rep("numeric", 15), rep("factor", 8)))
	
	cnt.col <- which(sapply(m, is.numeric))
	cat.col <- which(sapply(m, is.factor))
%>

\section{Introduction}

This document described a new data set specification designed for experimenting with graphical methods for explorin high dimensional continuous and categorical data (and because I was bored of using olive oils data!). Here I document the data set, the collection process, and give some basic univariate statistics for each variable.  

The latest version of the this document, the data set, and links to analyses performed by others can be found at \href{http://had.co.nz/data/movies}{had.co.nz}.

\section{Data collection}

The internet movie database, \href{http://imdb.com/}{imdb.com}, is a website devoted to collecting movie data supplied by studios and fan.  It claims to be the biggest movie database on the web and is run by amazon.  More about information imdb.com can be found \href{http://imdb.com/help/show_leaf?about}{online}, including information about the \href{http://imdb.com/help/show_leaf?infosource}{data collection process}.

IMDB makes their \href{http://uk.imdb.com/interfaces/}{raw data available}. Unfortunately, the data is divided into many text files and the format of each file differs slightly.  To create one data file containing all the desired information I wrote a script in the \href{http://ruby-lang.org}{ruby} to extract the relevent information and store in a database.  This data was then exported into csv for easy import into many programs.

The following text files were downloaded and used:

\begin{itemize}
	\item business.list. Total budget
	\item genres.list.  Genres that a movie belongs to (eg. comedy and action)
	\item movies.list.  Master list of all movie titles with year of production.
	\item mpaa-ratings-reasons.list.  MPAA ratings.
	\item ratings.list.  IMDB fan ratings.
	\item running-times.list.  Movie length in minutes.
\end{itemize}

Movies were selected for inclusion if they had a known length and had been rated by at least one imdb user.  The csv file contains the following fields:

\begin{itemize}
	\item title.  Title of the movie.
	\item year.  Year of release.
	\item budget.  Total budget (if known) in US dollars
	\item length.  Length in minutes.
	\item rating.  Average IMDB user rating.
	\item votes.  Number of IMDB users who rated this movie.
	\item r1-10.  Multiplying by ten gives percentile (to nearest 10\%) of users who rated this movie a 1.
	\item mpaa.  MPAA rating.
	\item action, animation, comedy, drama, documentary, romance, short.  Binary variables representing if movie was classified as belonging to that genre.
\end{itemize}

\section{Overall details}

There are a total of <%= cat(nrow(m)) %> movies from ``<%= cat(m[1,1])%>'' to  ``<%= cat(m[nrow(m),1])%>'', and the first few rows of the data look like:

<%= xtable(head(m[,c(1,cnt.col)]),digits=rep(0,17)) %>

<%= xtable(head(m[,cat.col]),digits=rep(0,9)) %>

\section{Individual variables}

\subsection{Year}

All <%= cat(nrow(m)) %> movies have known year.

<%=g histogram(~year, m) %>

\subsection{Budget}

<%= cat(sum(!is.na(m$budget))) %> movies have known budget.  This is a rather small (and potentially biased) subset, so we may want to be cautious about drawing any conclusions about the distribution of budgets.

<%=g histogram(~budget, m) %>

That's a big range - which were the most expensive?

<%
	movies.long <- subset(m[order(m$length, decreasing=T), ], length > 300, c("title", "year", "length"))
	movies.expensive <- subset(m[order(m$budget, decreasing=T), ], budget > 100000000, c("title", "year", "budget"))
%>

<%= xtable(movies.expensive, digits=rep(0, 4)) %>

\subsection{Length}

<%= cat(sum(!is.na(m$length))) %> movies have known length.

<%=g histogram(~length, m) %>

Some of those movies are very long!!  Which ones are they?

<%= xtable(movies.long, digits=rep(0, 4)) %>

How are the length disributed after we remove those very long movies?

<%=g histogram(~length, m, subset = length < 240) %>

\end{document}
